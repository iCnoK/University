<UserControl x:Class="Paint.View.BrushesBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:converters="clr-namespace:Paint.Utility"
             xmlns:enums="clr-namespace:Paint.Utility.Enums"
             xmlns:local="clr-namespace:Paint.View"
             xmlns:ViewModels="clr-namespace:Paint.ViewModel"
             
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             Loaded="UserControl_Loaded"
             d:DesignHeight="720" d:DesignWidth="240" Visibility="{Binding ChangeVisibilityOfBar}">

    <UserControl.Resources>
        <Style x:Key="ProgressiveButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Button.IsMouseOver" Value="True"/>
                                    <Condition Property="Button.IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="Background" Value="#FFF0F0F0"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Black"/>
                            </MultiTrigger>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter Property="Background" Value="AliceBlue"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Blue"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="Button.IsFocused" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="DefaultColorButton">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Command" Value="{Binding Path=SetDefaultColor}"/>
            <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Button.IsMouseOver" Value="True"/>
                                    <Condition Property="Button.IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush" Value="Black"/>
                            </MultiTrigger>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Blue"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="CustomColorButton">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Command" Value="{Binding Path=SetCustomColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Button.IsMouseOver" Value="True"/>
                                    <Condition Property="Button.IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="BorderBrush" Value="Black"/>
                            </MultiTrigger>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Blue"/>
                                <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style TargetType="StackPanel" x:Key="FocuseHandler">
            <Style.Triggers>
                <Trigger Property="IsFocused" Value="True">
                    
                </Trigger>
            </Style.Triggers>
        </Style>-->
        <!--<converters:BoolNegation x:Key="NegBool"/>-->
        <converters:BrushTypeToString x:Key="BrushToStr"/>
    </UserControl.Resources>

    <UserControl.DataContext>
        <ViewModels:BrushesBarViewModel/>
    </UserControl.DataContext>
    
    <Grid>
        <Grid.Background>
            <RadialGradientBrush>
                <GradientStop Color="#FFBDBDBD" Offset="0"/>
                <GradientStop Color="#FFE6E6E6" Offset="1"/>
            </RadialGradientBrush>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="250"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="270"/>
        </Grid.RowDefinitions>

        <TextBlock Width="204" Grid.Row="0" Text="{Binding Path=BrushType, Converter={StaticResource BrushToStr}, NotifyOnTargetUpdated=True}"
               Foreground="Blue" FontSize="15" FontWeight="DemiBold" VerticalAlignment="Center">
            <TextBlock.Triggers>
                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Duration="0:0:1" From="0" To="1" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </TextBlock.Triggers>
        </TextBlock>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="81"/>
                <!--<RowDefinition Height="1"/>
                <RowDefinition Height="40"/>-->
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid FocusManager.IsFocusScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="1"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Name="MarkerButton" Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.MARKER}"
                            ToolTip="Маркер" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Marker_Brush.png"/>
                    </Button>
                    <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.FOUNTAINPEN}"
                            ToolTip="Перьевая ручка" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Fountainpen_Brush.png"/>
                    </Button>
                    <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.OILBRUSH}"
                            ToolTip="Кисть для масляных красок" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Oilbrush_Brush.png"/>
                    </Button>
                    <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.WATERCOLOR}"
                            ToolTip="Акварель" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Watercolor_Brush.png"/>
                    </Button>
                    <Button Width="40" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.PIXELPEN}"
                            ToolTip="Пиксельное перо" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Pixelpen_Brush.png"/>
                    </Button>
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.PENCIL}"
                            ToolTip="Карандаш" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Pencil_Brush.png"/>
                    </Button>
                    <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.ERASER}"
                            ToolTip="Ластик" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Eraser_Brush.png"/>
                    </Button>

                    <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.SPRAYCAN}"
                            ToolTip="Баллончик с краской" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Spraycan_Brush.png"/>
                    </Button>
                    <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                            CommandParameter="{x:Static enums:BrushType.FILL}"
                            ToolTip="Заполнить" Style="{StaticResource ProgressiveButtonStyle}">
                        <Image Source="/Utility/Resources/Brushes/Fill_Brush.png"/>
                    </Button>
                    <Rectangle Width="40"/>
                </StackPanel>
            </Grid>
            <StackPanel Grid.Row="2" Orientation="Vertical" HorizontalAlignment="Center">
                <StackPanel Margin="0,30,0,0" Orientation="Horizontal" HorizontalAlignment="Center"
                            Visibility="{Binding ElementName=WidthSlider, Path=Visibility}">
                    <Label Content="Толщина" Width="130"  Margin="0,0,4,0"/>
                    <TextBox Text="{Binding ElementName=WidthSlider, Path=Value}" Width="40" BorderThickness="1"
                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                             PreviewTextInput="NumericOnly" />
                    <Label Width="30" Content="пкс"/>
                </StackPanel>
                <Slider Name="WidthSlider" Margin="0,10,0,0" Style="{StaticResource Horizontal_Slider}" Width="200"
                        Value="{Binding WidthSliderValue}" Minimum="{Binding WidthSliderMinimum}" Maximum="{Binding WidthSliderMaximum}" SmallChange="0" IsSnapToTickEnabled="True"
                        Visibility="{Binding WidthVisibility}"/>
                
                
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal" HorizontalAlignment="Center"
                            Visibility="{Binding ElementName=OpacitySlider, Path=Visibility}">
                    <Label Content="Непрозрачность" Width="130"  Margin="0,0,4,0"/>
                    <TextBox Text="{Binding ElementName=OpacitySlider, Path=Value}" Width="40" BorderThickness="1"
                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                             PreviewTextInput="NumericOnly"/>
                    <Label Width="30" Content="%"/>
                </StackPanel>
                <Slider Name="OpacitySlider" Margin="0,10,0,0" Style="{StaticResource Horizontal_Slider}" Width="200"
                        Value="{Binding OpacitySliderValue}" Minimum="0" Maximum="100" SmallChange="0" IsSnapToTickEnabled="True"
                        Visibility="{Binding OpacityVisibility}"/>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="3" >
            <Grid.RowDefinitions>
                <RowDefinition Height="225"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <!--7квадратов в 1 строке по 1 цвету в каждом-->
            <!--палитра-->
            <Grid Grid.Row="0" FocusManager.IsFocusScope="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25"/>
                    <RowDefinition Height="92"/>
                    <RowDefinition Height="25"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle Grid.Row="0" Grid.RowSpan="4" Width="204"
                       Fill="Transparent" Stroke="LightSlateGray"/>
                <Label Grid.Row="0" Height="25" VerticalAlignment="Top" 
                   Content="       Стандартная палитра" VerticalContentAlignment="Center"
                   FontSize="11" Foreground="#FF454545" FontWeight="Bold"/>
                <Label Grid.Row="2" Height="25" VerticalAlignment="Top" 
                   Content="       Изменяемая палитра" VerticalContentAlignment="Center"
                   FontSize="11" Foreground="#FF454545" FontWeight="Bold"
                   ToolTip="Для выбора цвета выберите ячейку в *Изменяемой палитре* и нажмите на кнопку *Добавить цвет*"/>
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Height="30" HorizontalAlignment="Center">
                        <Button Name="_00" Width="30" Background="White"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Белый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="LightGray"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Светло-серый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="DarkGray"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Темно-серый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Black"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Черный"/>
                        <Button Width="30" Margin="1,0,0,0" Background="DarkRed"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Темно-красный"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Red"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Красный"/>
                    </StackPanel>
                    <StackPanel Margin="0,1,0,0" Orientation="Horizontal" Height="30" HorizontalAlignment="Center">
                        <Button Width="30" Background="Orange"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Оранжевый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Gold"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Золотой"/>
                        <Button Width="30" Margin="1,0,0,0" Background="LightYellow"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Светло-желтый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Yellow"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Желтый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="LightGreen"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Светло-зеленый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Green"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Зеленый"/>
                    </StackPanel>
                    <StackPanel Margin="0,1,0,0" Orientation="Horizontal" Height="30" HorizontalAlignment="Center">
                        <Button Width="30" Background="LightBlue"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Светло-синий"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Turquoise"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Бирюзовый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Indigo"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Индиго"/>
                        <Button Width="30" Margin="1,0,0,0" Background="DeepPink"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Глубокий розовый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Pink"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Розовый"/>
                        <Button Width="30" Margin="1,0,0,0" Background="Brown"
                            Style="{StaticResource DefaultColorButton}"
                            ToolTip="Коричневый"/>
                    </StackPanel>

                </StackPanel>

                <StackPanel Grid.Row="3" Orientation="Vertical">
                    
                    
                    <StackPanel Orientation="Horizontal" Height="30"
                            HorizontalAlignment="Center" VerticalAlignment="Top">
                        <!--забиндить бэкграунд на вьюмодель-->
                        <Button Name="__00" Width="30" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>0</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>1</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>2</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>3</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>4</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>5</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Height="30" Margin="0,1,0,0"
                            HorizontalAlignment="Center" VerticalAlignment="Top">
                        <!--забиндить бэкграунд на вьюмодель-->
                        <Button Width="30" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>6</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>7</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>8</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>9</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>10</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                        <Button Width="30" Margin="1,0,0,0" Background="Transparent"
                            Style="{StaticResource CustomColorButton}"
                            ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Background}">
                            <Button.CommandParameter>
                                <s:Int32>11</s:Int32>
                            </Button.CommandParameter>
                        </Button>
                    </StackPanel>
                </StackPanel>
                
            </Grid>
            
            <!--ToolTip="Для выбора цвета выберите ячейку в *Изменяемой палитре* и нажмите на кнопку *Добавить цвет*"-->
            <StackPanel IsEnabled="{Binding Path=ButtonsIsEnabled}"  Grid.Row="2" Orientation="Horizontal">
                <Button Grid.Row="2" Height="30" Width="170" Background="Transparent" BorderBrush="LightSlateGray"
                    Style="{StaticResource ProgressiveButtonStyleReview}" HorizontalAlignment="Left" Margin="18,0,0,0"
                          ><!--Command="{Binding OpenColorPicker}"-->
                    <StackPanel Orientation="Horizontal">
                        <Image Height="30" Width="30"
                           Source="/Utility/Resources/Plus.png"
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Label Content="Добавить цвет" Margin="5,0,0,0" BorderBrush="Transparent"/>
                    </StackPanel>
                </Button>
                <Button Grid.Row="2" Height="30" Width="30" Background="Transparent" BorderBrush="LightSlateGray"
                    Style="{StaticResource ProgressiveButtonStyleReview}" Margin="4,0,0,0">
                    <Image Height="30" Width="30"
                           Source="/Utility/Resources/Pipette.png"
                           HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Button>
            </StackPanel>
            <!--IsEnabled="{Binding ElementName=TEST, Path=IsFocused}"-->
            <!--<xctk:ColorPicker Grid.Row="2" AvailableColorsSortingMode="HueSaturationBrightness"/>-->
            

        </Grid>
        
    </Grid>
</UserControl>
