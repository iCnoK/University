<UserControl x:Class="Paint.View.BrushesBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:converters="clr-namespace:Paint.Utility"
             xmlns:enums="clr-namespace:Paint.Utility.Enums"
             xmlns:local="clr-namespace:Paint.View"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="212" Visibility="{Binding ChangeVisibilityOfBar}">

    <UserControl.Resources>
        <Style x:Key="ProgressiveButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Button.IsMouseOver" Value="True"/>
                                    <Condition Property="Button.IsFocused" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="border" Property="Background" Value="#FFF0F0F0"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Black"/>
                            </MultiTrigger>
                            <Trigger Property="Button.IsFocused" Value="True">
                                <Setter Property="Background" Value="AliceBlue"/>
                                <Setter TargetName="border" Property="BorderBrush" Value="Blue"/>
                            </Trigger>
                            <Trigger Property="Button.IsFocused" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style x:Key="LabelAnimation" TargetType="{x:Type Label}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction  Command="{Binding ClacNdsTextChangedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            --><!--<Style.Triggers>
                --><!--<Trigger Property="Label."--><!--
                <EventTrigger >
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:3"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>--><!--
        </Style>-->
        <converters:BrushTypeToString x:Key="BrushToStr"/>
    </UserControl.Resources>

    <Grid>
        <Grid.Background>
            <RadialGradientBrush>
                <GradientStop Color="#FFBDBDBD" Offset="0"/>
                <GradientStop Color="#FFE6E6E6" Offset="1"/>
            </RadialGradientBrush>
        </Grid.Background>

        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="250"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Label Grid.Row="0" Content="{Binding Path=BrushType, Converter={StaticResource BrushToStr}}" VerticalContentAlignment="Center" x:Name="TypeOfBrushLabel"
               Foreground="Blue" FontSize="15" FontWeight="DemiBold">
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    
                    <i:InvokeCommandAction  Command="{Binding ClacNdsTextChangedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
        </Label>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition Height="1"/>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            
            <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.MARKER}"
                        ToolTip="Маркер" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Marker_Brush.png"/>
                </Button>
                <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.FOUNTAINPEN}"
                        ToolTip="Перьевая ручка" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Fountainpen_Brush.png"/>
                </Button>
                <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.OILBRUSH}"
                        ToolTip="Кисть для масляных красок" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Oilbrush_Brush.png"/>
                </Button>
                <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.WATERCOLOR}"
                        ToolTip="Акварель" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Watercolor_Brush.png"/>
                </Button>
                <Button Width="40" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.PIXELPEN}"
                        ToolTip="Пиксельное перо" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Pixelpen_Brush.png"/>
                </Button>
            </StackPanel>
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.PENCIL}"
                        ToolTip="Карандаш" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Pencil_Brush.png"/>
                </Button>
                <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.ERASER}"
                        ToolTip="Ластик" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Eraser_Brush.png"/>
                </Button>

                <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.SPRAYCAN}"
                        ToolTip="Баллончик с краской" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Spraycan_Brush.png"/>
                </Button>
                <Button Width="40" Margin="0,0,1,0" Command="{Binding SetBrush}"
                        CommandParameter="{x:Static enums:BrushType.FILL}"
                        ToolTip="Заполнить" Style="{StaticResource ProgressiveButtonStyle}">
                    <Image Source="/Utility/Resources/Brushes/Fill_Brush.png"/>
                </Button>
                <Rectangle Width="40"/>
            </StackPanel>
            <StackPanel Grid.Row="3" Orientation="Vertical" HorizontalAlignment="Center">
                <StackPanel Margin="0,30,0,0" Orientation="Horizontal" HorizontalAlignment="Center"
                            Visibility="{Binding ElementName=WidthSlider, Path=Visibility}">
                    <Label Content="Толщина" Width="130"  Margin="0,0,4,0"/>
                    <TextBox Text="{Binding ElementName=WidthSlider, Path=Value}" Width="40" BorderThickness="1"
                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                             PreviewTextInput="NumericOnly" />
                    <Label Width="30" Content="пкс"/>
                </StackPanel>
                <Slider Name="WidthSlider" Margin="0,10,0,0" Style="{StaticResource Horizontal_Slider}" Width="200"
                        Value="{Binding WidthSliderValue}" Minimum="{Binding WidthSliderMinimum}" Maximum="{Binding WidthSliderMaximum}" SmallChange="0" IsSnapToTickEnabled="True"
                        Visibility="{Binding WidthVisibility}"/>
                
                
                <StackPanel Margin="0,10,0,0" Orientation="Horizontal" HorizontalAlignment="Center"
                            Visibility="{Binding ElementName=OpacitySlider, Path=Visibility}">
                    <Label Content="Непрозрачность" Width="130"  Margin="0,0,4,0"/>
                    <TextBox Text="{Binding ElementName=OpacitySlider, Path=Value}" Width="40" BorderThickness="1"
                             HorizontalContentAlignment="Center" VerticalContentAlignment="Center"
                             PreviewTextInput="NumericOnly"/>
                    <Label Width="30" Content="%"/>
                </StackPanel>
                <Slider Name="OpacitySlider" Margin="0,10,0,0" Style="{StaticResource Horizontal_Slider}" Width="200"
                        Value="{Binding OpacitySliderValue}" Minimum="0" Maximum="100" SmallChange="0" IsSnapToTickEnabled="True"
                        Visibility="{Binding OpacityVisibility}"/>
            </StackPanel>
        </Grid>

        <xctk:ColorPicker Grid.Row="2" AvailableColorsSortingMode="HueSaturationBrightness"/>

    </Grid>
</UserControl>
